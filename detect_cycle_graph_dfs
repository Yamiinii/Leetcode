//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
  public:
    // Function to detect cycle in an undirected gra

    bool dfs(vector<int> adj[], int visited[], int node, int parent) {
        visited[node] = 1;
        for (auto adjacent : adj[node]) {
            if (!visited[adjacent]) {
                if (dfs(adj, visited, adjacent, node))
                    return true;
            } else if (parent != adjacent) {
                return true; // Cycle detected
            }
        }

        return false; // No cycle detected
    }

    bool isCycle(int V, vector<int> adj[]) {
        int visited[V];
        fill(visited, visited + V, 0);

        for (int i = 0; i < V; i++) {
            if (!visited[i]) {
                if (dfs(adj, visited, i, -1))
                    return true;
            }
        }

        return false;
    }
};
